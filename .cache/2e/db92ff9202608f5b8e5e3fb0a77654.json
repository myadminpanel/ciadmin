{"id":"node_modules/node-thermal-printer/lib/interfaces/file.js","dependencies":[{"name":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\package.json","includedInParent":true,"mtime":1567513785467},{"name":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\.babelrc","includedInParent":true,"mtime":1567509708091},{"name":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\package.json","includedInParent":true,"mtime":1567512466349},{"name":"./interface","loc":{"line":1,"column":26},"parent":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\lib\\interfaces\\file.js","resolved":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\lib\\interfaces\\interface.js"},{"name":"fs","loc":{"line":2,"column":19},"parent":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\lib\\interfaces\\file.js","resolved":"C:\\Users\\RAKESH\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\src\\builtins\\_empty.js"},{"name":"write-file-queue","loc":{"line":10,"column":29},"parent":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\lib\\interfaces\\file.js","resolved":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\write-file-queue\\index.js"}],"generated":{"js":"const Interface = require(\"./interface\");\nconst fs = require(\"fs\");\n\n\n\nclass File extends Interface {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.writeFile = require(\"write-file-queue\")({\n      retries: 1000, \t// number of write attempts before failing\n      waitTime: 200   // number of milliseconds to wait between write attempts\n    });\n  }\n\n\n  async isPrinterConnected() {\n    try {\n      return fs.existsSync(this.path);\n    } catch(error) {\n      throw error;\n    }\n  }\n\n\n  async execute(buffer) {\n    return new Promise((resolve, reject) => {\n      this.writeFile(this.path, buffer, function (error) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(\"Print done\");\n        }\n      });\n    });\n  }\n}\n\n\nmodule.exports = File;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/file.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/node-thermal-printer/lib/interfaces/file.js":"const Interface = require(\"./interface\");\nconst fs = require(\"fs\");\n\n\n\nclass File extends Interface {\n  constructor(path) {\n    super();\n    this.path = path;\n    this.writeFile = require(\"write-file-queue\")({\n      retries: 1000, \t// number of write attempts before failing\n      waitTime: 200   // number of milliseconds to wait between write attempts\n    });\n  }\n\n\n  async isPrinterConnected() {\n    try {\n      return fs.existsSync(this.path);\n    } catch(error) {\n      throw error;\n    }\n  }\n\n\n  async execute(buffer) {\n    return new Promise((resolve, reject) => {\n      this.writeFile(this.path, buffer, function (error) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(\"Print done\");\n        }\n      });\n    });\n  }\n}\n\n\nmodule.exports = File;"},"lineCount":40}},"error":null,"hash":"ac045092efd4b63640a45abd4cb53ee2","cacheData":{"env":{}}}