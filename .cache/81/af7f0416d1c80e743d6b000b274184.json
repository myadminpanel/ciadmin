{"id":"node_modules/node-thermal-printer/lib/interfaces/printer.js","dependencies":[{"name":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\package.json","includedInParent":true,"mtime":1567513785467},{"name":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\.babelrc","includedInParent":true,"mtime":1567509708091},{"name":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\package.json","includedInParent":true,"mtime":1567512466349},{"name":"./interface","loc":{"line":1,"column":26},"parent":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\lib\\interfaces\\printer.js","resolved":"C:\\Users\\RAKESH\\Desktop\\jquery-admin-panel\\node_modules\\node-thermal-printer\\lib\\interfaces\\interface.js"}],"generated":{"js":"const Interface = require(\"./interface\");\n\nclass Printer extends Interface {\n  constructor(printerName, moduleName) {\n    super();\n    this.name = printerName;\n    if (moduleName && typeof moduleName === \"object\") {\n      this.driver = moduleName;\n    }\n  }\n\n\n  getPrinterName () {\n    var name = this.name;\n    if (!name || name === \"auto\") {\n      const pl = this.driver.getPrinters().filter(function (p) {\n        return p.attributes.indexOf(\"RAW-ONLY\") > -1\n      });\n      if (pl.length > 0) {\n        name = pl[0].name;\n      }\n    }\n    if (!name || name === \"auto\") {\n      throw new Error(\"A RAW-ONLY Printer could not be detected. Please configure a Printer-Name\");\n    }\n    return name;\n  }\n\n\n  async isPrinterConnected () {\n    if (this.driver.getPrinter(this.getPrinterName())) {\n      return true;\n    } else {\n      throw false;\n    }\n  }\n\n  async execute (buffer) {\n    return new Promise((resolve, reject) => {\n      this.driver.printDirect({\n        data: buffer,\n        printer: this.getPrinterName(),\n        type: \"RAW\",\n        success: function (jobID) {\n          resolve(\"Printed with job id: \" + jobID);\n        },\n        error: function (error) {\n          reject(error);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = Printer;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/node-thermal-printer/lib/interfaces/printer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}}],"sources":{"node_modules/node-thermal-printer/lib/interfaces/printer.js":"const Interface = require(\"./interface\");\n\nclass Printer extends Interface {\n  constructor(printerName, moduleName) {\n    super();\n    this.name = printerName;\n    if (moduleName && typeof moduleName === \"object\") {\n      this.driver = moduleName;\n    }\n  }\n\n\n  getPrinterName () {\n    var name = this.name;\n    if (!name || name === \"auto\") {\n      const pl = this.driver.getPrinters().filter(function (p) {\n        return p.attributes.indexOf(\"RAW-ONLY\") > -1\n      });\n      if (pl.length > 0) {\n        name = pl[0].name;\n      }\n    }\n    if (!name || name === \"auto\") {\n      throw new Error(\"A RAW-ONLY Printer could not be detected. Please configure a Printer-Name\");\n    }\n    return name;\n  }\n\n\n  async isPrinterConnected () {\n    if (this.driver.getPrinter(this.getPrinterName())) {\n      return true;\n    } else {\n      throw false;\n    }\n  }\n\n  async execute (buffer) {\n    return new Promise((resolve, reject) => {\n      this.driver.printDirect({\n        data: buffer,\n        printer: this.getPrinterName(),\n        type: \"RAW\",\n        success: function (jobID) {\n          resolve(\"Printed with job id: \" + jobID);\n        },\n        error: function (error) {\n          reject(error);\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = Printer;\n"},"lineCount":56}},"error":null,"hash":"170016213325be359028eebc479ba1e3","cacheData":{"env":{}}}